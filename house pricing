{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Project: Predicting Boston Housing Prices\n",
    "### Data  \n",
    "\n",
    "The modified Boston housing dataset consists of 489 data points, with each datapoint having 3 features. This dataset is a modified version of the Boston Housing dataset found on the <a href=\"https://archive.ics.uci.edu/ml/index.php\">UCI Machine Learning Repository</a> and you can find the main dataset on the \n",
    "<a href=\"https://www.kaggle.com/c/boston-housing\">Kaggle</a>\n",
    "\n",
    "\n",
    "### Features  \n",
    "\n",
    "RM: average number of rooms per dwelling (Total number of rooms in home)  \n",
    "LSTAT: percentage of population considered lower status (Neighborhood poverty level )  \n",
    "PTRATIO: pupil-teacher ratio by town  (Student-teacher ratio of nearby schools)  \n",
    "Target Variable: MEDV: median value of owner-occupied homes (house price)  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import libraries:\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 489 entries, 0 to 488\n",
      "Data columns (total 4 columns):\n",
      " #   Column   Non-Null Count  Dtype  \n",
      "---  ------   --------------  -----  \n",
      " 0   RM       489 non-null    float64\n",
      " 1   LSTAT    489 non-null    float64\n",
      " 2   PTRATIO  489 non-null    float64\n",
      " 3   MEDV     489 non-null    float64\n",
      "dtypes: float64(4)\n",
      "memory usage: 15.4 KB\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RM</th>\n",
       "      <th>LSTAT</th>\n",
       "      <th>PTRATIO</th>\n",
       "      <th>MEDV</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>6.575</td>\n",
       "      <td>4.98</td>\n",
       "      <td>15.3</td>\n",
       "      <td>504000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>6.421</td>\n",
       "      <td>9.14</td>\n",
       "      <td>17.8</td>\n",
       "      <td>453600.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>7.185</td>\n",
       "      <td>4.03</td>\n",
       "      <td>17.8</td>\n",
       "      <td>728700.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6.998</td>\n",
       "      <td>2.94</td>\n",
       "      <td>18.7</td>\n",
       "      <td>701400.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7.147</td>\n",
       "      <td>5.33</td>\n",
       "      <td>18.7</td>\n",
       "      <td>760200.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6.430</td>\n",
       "      <td>5.21</td>\n",
       "      <td>18.7</td>\n",
       "      <td>602700.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6.012</td>\n",
       "      <td>12.43</td>\n",
       "      <td>15.2</td>\n",
       "      <td>480900.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>6.172</td>\n",
       "      <td>19.15</td>\n",
       "      <td>15.2</td>\n",
       "      <td>569100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>5.631</td>\n",
       "      <td>29.93</td>\n",
       "      <td>15.2</td>\n",
       "      <td>346500.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>6.004</td>\n",
       "      <td>17.10</td>\n",
       "      <td>15.2</td>\n",
       "      <td>396900.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      RM  LSTAT  PTRATIO      MEDV\n",
       "0  6.575   4.98     15.3  504000.0\n",
       "1  6.421   9.14     17.8  453600.0\n",
       "2  7.185   4.03     17.8  728700.0\n",
       "3  6.998   2.94     18.7  701400.0\n",
       "4  7.147   5.33     18.7  760200.0\n",
       "5  6.430   5.21     18.7  602700.0\n",
       "6  6.012  12.43     15.2  480900.0\n",
       "7  6.172  19.15     15.2  569100.0\n",
       "8  5.631  29.93     15.2  346500.0\n",
       "9  6.004  17.10     15.2  396900.0"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Load the Boston housing dataset\n",
    "data = pd.read_csv('housing.csv')\n",
    "data.info()\n",
    "data.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Data Exploration\n",
    "data.plot.scatter('RM','MEDV',c='r');\n",
    "data.plot.scatter('LSTAT','MEDV',c='c');\n",
    "data.plot.scatter('PTRATIO','MEDV',c='g');\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RM</th>\n",
       "      <th>LSTAT</th>\n",
       "      <th>PTRATIO</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>6.575</td>\n",
       "      <td>4.98</td>\n",
       "      <td>15.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>6.421</td>\n",
       "      <td>9.14</td>\n",
       "      <td>17.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>7.185</td>\n",
       "      <td>4.03</td>\n",
       "      <td>17.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6.998</td>\n",
       "      <td>2.94</td>\n",
       "      <td>18.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7.147</td>\n",
       "      <td>5.33</td>\n",
       "      <td>18.7</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      RM  LSTAT  PTRATIO\n",
       "0  6.575   4.98     15.3\n",
       "1  6.421   9.14     17.8\n",
       "2  7.185   4.03     17.8\n",
       "3  6.998   2.94     18.7\n",
       "4  7.147   5.33     18.7"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#define variables(features,prices)\n",
    "prices = data['MEDV']\n",
    "\n",
    "features = data.drop('MEDV', axis = 1)\n",
    "features.head(5)    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "#split the data to two sets. training set and testing set:\n",
    "from sklearn.model_selection import train_test_split\n",
    "X_train, X_test, y_train, y_test = train_test_split(features, prices, test_size = 0.25)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "training set: (366, 3) (366,)\n",
      "testing set: (123, 3) 123\n"
     ]
    }
   ],
   "source": [
    "print(\"training set:\",X_train.shape,y_train.shape)\n",
    "print(\"testing set:\",X_test.shape,y_test.shape[0])\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "#create the rgression model:\n",
    "from sklearn.linear_model import LinearRegression\n",
    "model = LinearRegression()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "#fit/train the model:\n",
    "model.fit(X_train,y_train);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "#predict X_test by the model:\n",
    "y_pred=model.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.6615129681436184"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#model accuracy test:\n",
    "from sklearn.metrics import r2_score\n",
    "r2_score(y_test, y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7291375566095728"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#extra point: model accuracy train: to check underfitting and oferfitting\n",
    "y_train_pre=model.predict(X_train)\n",
    "r2_score(y_train, y_train_pre)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Extra:  \n",
    "prdict the price for house with:   \n",
    "Total number of rooms in home =7 rooms  \n",
    "Neighborhood poverty level as 20%  \n",
    "Student-teacher ratio of nearby schools=19-to-1  \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1, 3)"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.array([7,20,19]).reshape(1,-1).shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([436976.14948434])"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.predict(np.array([7,20,19]).reshape(1,-1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
